{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/drive1/MicrosoftEngage/assist-learning/assist/SwipeCards.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SwipeCards from \"react-native-swipe-cards\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.card, {\n          backgroundColor: this.props.backgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nvar NoMoreCards = function (_Component) {\n  _inherits(NoMoreCards, _Component);\n\n  var _super2 = _createSuper(NoMoreCards);\n\n  function NoMoreCards(props) {\n    _classCallCheck(this, NoMoreCards);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(NoMoreCards, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.noMoreCardsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"Great! You have finished all the Questions\"));\n    }\n  }]);\n\n  return NoMoreCards;\n}(Component);\n\nvar cards = [{\n  text: \"What is a cell?\",\n  backgroundColor: \"cyan\",\n  answer: \" The cell in a living organism is the basic structural unit.\"\n}, {\n  text: \"What is the relation between Tissues, Organ and Cell?\",\n  backgroundColor: \"cyan\",\n  answer: \"Organs are made up of tissues which are in turn made up of cells\"\n}, {\n  text: \"Specify two organs in a plant and their functions\",\n  backgroundColor: \"cyan\",\n  answer: \"Roots for absoption of water and Leaves for synthesis of food\"\n}, {\n  text: \"What are the major components of the cell?\",\n  backgroundColor: \"cyan\",\n  answer: \"Cell Membrane, Cytoplasm and Nucleus\"\n}, {\n  text: \"Where is a nucleus located?\",\n  backgroundColor: \"cyan\",\n  answer: \"Centre of the cell\"\n}, {\n  text: \"What are the functions of a chromosome?\",\n  backgroundColor: \"cyan\",\n  answer: \"Carrying genes and help in inheritance\"\n}, {\n  text: \"What are the functions of a nuclues?\",\n  backgroundColor: \"cyan\",\n  answer: \"Control Centre of the activities in the cell and contains chromosomes\"\n}, {\n  text: \"What do we mean by protoplasm?\",\n  backgroundColor: \"cyan\",\n  answer: \"Cytoplasm and Nucleus make up the entire content of a cell called protoplasm\"\n}];\n\nvar _default = function (_React$Component2) {\n  _inherits(_default, _React$Component2);\n\n  var _super3 = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super3.call(this, props);\n    _this.state = {\n      cards: cards,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleYup\",\n    value: function handleYup(card) {\n      this.setState({\n        score: this.state.score + 1\n      });\n      console.log(\"\" + this.state.score);\n      console.log(\"Yup for \" + card.text);\n    }\n  }, {\n    key: \"handleNope\",\n    value: function handleNope(card) {\n      this.setState({\n        score: this.state.score - 1\n      });\n      console.log(\"Nope for \" + card.text);\n      Alert.alert(\"Answer\", card.answer);\n    }\n  }, {\n    key: \"handleMaybe\",\n    value: function handleMaybe(card) {\n      console.log(\"Maybe for \" + card.text);\n      Alert.alert(\"Answer\", card.answer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(SwipeCards, {\n        cards: this.state.cards,\n        renderCard: function renderCard(cardData) {\n          return React.createElement(Card, _extends({}, cardData, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }\n          }));\n        },\n        renderNoMoreCards: function renderNoMoreCards() {\n          return React.createElement(NoMoreCards, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 36\n            }\n          });\n        },\n        handleYup: this.handleYup.bind(this),\n        handleNope: this.handleNope.bind(this),\n        handleMaybe: this.handleMaybe.bind(this),\n        hasMaybeAction: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \"SCORE IS \", this.state.score));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 30,\n    padding: 30,\n    width: 300,\n    height: 300\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  score: {\n    fontSize: 20,\n    paddingTop: 10,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/drive1/MicrosoftEngage/assist-learning/assist/SwipeCards.js"],"names":["React","Component","SwipeCards","Card","props","styles","card","backgroundColor","text","NoMoreCards","noMoreCardsText","cards","answer","state","score","setState","console","log","Alert","alert","container","cardData","handleYup","bind","handleNope","handleMaybe","StyleSheet","create","paddingTop","flex","alignItems","justifyContent","fontSize","padding","width","height","textAlign","marginTop"],"mappings":"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","sourcesContent":["// SwipeCards.js\n\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Alert } from \"react-native\";\n\nimport SwipeCards from \"react-native-swipe-cards\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.card, { backgroundColor: this.props.backgroundColor }]}\n      >\n        <Text>{this.props.text}</Text>\n      </View>\n    );\n  }\n}\n\nclass NoMoreCards extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View>\n        <Text style={styles.noMoreCardsText}>\n          Great! You have finished all the Questions\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst cards = [\n\n  { text: \"What is a cell?\", backgroundColor: \"cyan\", answer : \" The cell in a living organism is the basic structural unit.\" },\n  {\n    text:\n      \"What is the relation between Tissues, Organ and Cell?\",\n    backgroundColor: \"cyan\",\n    answer: \"Organs are made up of tissues which are in turn made up of cells\"\n  },\n  { text: \"Specify two organs in a plant and their functions\", backgroundColor: \"cyan\" , answer : \"Roots for absoption of water and Leaves for synthesis of food\"},\n  {\n    text:\n      \"What are the major components of the cell?\",\n    backgroundColor: \"cyan\",\n    answer: \"Cell Membrane, Cytoplasm and Nucleus\"\n  },\n  { text: \"Where is a nucleus located?\", backgroundColor: \"cyan\" , answer : \"Centre of the cell\"},\n  {\n    text: \"What are the functions of a chromosome?\",\n    backgroundColor: \"cyan\",\n    answer : \"Carrying genes and help in inheritance\"\n  },\n  { text: \"What are the functions of a nuclues?\", backgroundColor: \"cyan\" , answer : \"Control Centre of the activities in the cell and contains chromosomes\"},\n  { text: \"What do we mean by protoplasm?\", backgroundColor: \"cyan\" , answer : \"Cytoplasm and Nucleus make up the entire content of a cell called protoplasm\"},\n];\n\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: cards,\n      score: 0,\n    };\n  }\n\n  handleYup(card) {\n    this.setState({ score: this.state.score + 1 });\n    console.log(`${this.state.score}`);\n    console.log(`Yup for ${card.text}`);\n  }\n  handleNope(card) {\n    this.setState({ score: this.state.score - 1 });\n    console.log(`Nope for ${card.text}`);\n\n    // this.state.answer = card.answer;\n    // this.state.isModalVisible = true;\n    Alert.alert(\"Answer\",card.answer);\n  }\n  handleMaybe(card) {\n    console.log(`Maybe for ${card.text}`);\n    Alert.alert(\"Answer\",card.answer);\n\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <SwipeCards\n          cards={this.state.cards}\n          renderCard={(cardData) => <Card {...cardData} />}\n          renderNoMoreCards={() => <NoMoreCards />}\n          handleYup={this.handleYup.bind(this)}\n          handleNope={this.handleNope.bind(this)}\n          handleMaybe={this.handleMaybe.bind(this)}\n          hasMaybeAction\n        />\n        <Text style={styles.score}>SCORE IS {this.state.score}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 30,\n    padding: 30,\n    width: 300,\n    height: 300,\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  score: {\n    fontSize: 20,\n    paddingTop: 10,\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}