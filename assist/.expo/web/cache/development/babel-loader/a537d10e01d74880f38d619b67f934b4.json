{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/drive1/MicrosoftEngage/assist-learning/assist/FlashCards.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SwipeCards from \"react-native-swipe-cards\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.card, {\n          backgroundColor: this.props.backgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nvar NoMoreCards = function (_Component) {\n  _inherits(NoMoreCards, _Component);\n\n  var _super2 = _createSuper(NoMoreCards);\n\n  function NoMoreCards(props) {\n    _classCallCheck(this, NoMoreCards);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(NoMoreCards, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.noMoreCardsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"Great! You have finished all the FlashCards\"));\n    }\n  }]);\n\n  return NoMoreCards;\n}(Component);\n\nvar cards = [{\n  text: \"The cell in a living organism is the basic structural unit.\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Organs are made up of tissues which are in turn made up of cells\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Organs perform different functions such as digestion, assimilation and absorption.\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Cell Membrane, Cytoplasm and Nucleus are key components of the Cell\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Nucleus are generally spherical and located in the centre of the cell\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Nucleus is the Control Centre of the activities in the cell and contains chromosomes\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Chromosome carry genes and help in inheritance\",\n  backgroundColor: \"cyan\"\n}, {\n  text: \"Cytoplasm and Nucleus make up the entire content of a cell called protoplasm\",\n  backgroundColor: \"cyan\"\n}];\n\nvar FlashCards = function (_React$Component2) {\n  _inherits(FlashCards, _React$Component2);\n\n  var _super3 = _createSuper(FlashCards);\n\n  function FlashCards(props) {\n    var _this;\n\n    _classCallCheck(this, FlashCards);\n\n    _this = _super3.call(this, props);\n    _this.state = {\n      cards: cards,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(FlashCards, [{\n    key: \"handleYup\",\n    value: function handleYup(card) {\n      this.setState({\n        score: this.state.score + 1\n      });\n      console.log(\"Yup for \" + card.text);\n    }\n  }, {\n    key: \"handleNope\",\n    value: function handleNope(card) {\n      this.setState({\n        score: this.state.score - 1\n      });\n      console.log(\"Nope for \" + card.text);\n    }\n  }, {\n    key: \"handleMaybe\",\n    value: function handleMaybe(card) {\n      console.log(\"Maybe for \" + card.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(SwipeCards, {\n        cards: this.state.cards,\n        renderCard: function renderCard(cardData) {\n          return React.createElement(Card, _extends({}, cardData, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }\n          }));\n        },\n        renderNoMoreCards: function renderNoMoreCards() {\n          return React.createElement(NoMoreCards, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 36\n            }\n          });\n        },\n        handleYup: this.handleYup.bind(this),\n        handleNope: this.handleNope.bind(this),\n        handleMaybe: this.handleMaybe.bind(this),\n        hasMaybeAction: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return FlashCards;\n}(React.Component);\n\nexport { FlashCards as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 30,\n    padding: 30,\n    width: 300,\n    height: 500\n  },\n  cardText: {\n    fontSize: 30\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/drive1/MicrosoftEngage/assist-learning/assist/FlashCards.js"],"names":["React","Component","SwipeCards","Card","props","styles","card","backgroundColor","cardText","text","NoMoreCards","noMoreCardsText","cards","FlashCards","state","score","setState","console","log","container","cardData","handleYup","bind","handleNope","handleMaybe","StyleSheet","create","paddingTop","flex","alignItems","justifyContent","fontSize","padding","width","height","textAlign"],"mappings":"AACA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWG;AAA9B,SAAd,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKJ,KAAL,CAAWK,IAA1C,CAHF,CADF;AAOD;;;;EAbgBT,KAAK,CAACC,S;;IAgBnBS,W;;;;;AACJ,uBAAYN,KAAZ,EAAmB;AAAA;;AAAA,8BACXA,KADW;AAElB;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACM,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADF,CADF;AAOD;;;;EAbuBV,S;;AAgB1B,IAAMW,KAAK,GAAG,CAEZ;AAAEH,EAAAA,IAAI,EAAE,6DAAR;AAAuEF,EAAAA,eAAe,EAAE;AAAxF,CAFY,EAGZ;AAAEE,EAAAA,IAAI,EAAE,kEAAR;AAA4EF,EAAAA,eAAe,EAAE;AAA7F,CAHY,EAIZ;AAAEE,EAAAA,IAAI,EAAE,oFAAR;AAA8FF,EAAAA,eAAe,EAAE;AAA/G,CAJY,EAKZ;AAAEE,EAAAA,IAAI,EAAE,qEAAR;AAA+EF,EAAAA,eAAe,EAAE;AAAhG,CALY,EAMZ;AAAEE,EAAAA,IAAI,EAAE,uEAAR;AAAiFF,EAAAA,eAAe,EAAE;AAAlG,CANY,EAOZ;AAAEE,EAAAA,IAAI,EAAE,sFAAR;AAAgGF,EAAAA,eAAe,EAAE;AAAjH,CAPY,EAQZ;AAAEE,EAAAA,IAAI,EAAE,gDAAR;AAA0DF,EAAAA,eAAe,EAAE;AAA3E,CARY,EASZ;AAAEE,EAAAA,IAAI,EAAE,8EAAR;AAAwFF,EAAAA,eAAe,EAAE;AAAzG,CATY,CAAd;;IAaqBM,U;;;;;AAEnB,sBAAYT,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;AACA,UAAKU,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAEA,KADI;AAEXG,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;8BAEST,I,EAAM;AACd,WAAKU,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,cAAuBZ,IAAI,CAACG,IAA5B;AACD;;;+BACUH,I,EAAM;AACf,WAAKU,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,eAAwBZ,IAAI,CAACG,IAA7B;AACD;;;gCACWH,I,EAAM;AAChBW,MAAAA,OAAO,CAACC,GAAR,gBAAyBZ,IAAI,CAACG,IAA9B;AACD;;;6BACQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWF,KADpB;AAEE,QAAA,UAAU,EAAE,oBAACQ,QAAD;AAAA,iBAAc,oBAAC,IAAD,eAAUA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAd;AAAA,SAFd;AAGE,QAAA,iBAAiB,EAAE;AAAA,iBAAM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAHrB;AAIE,QAAA,SAAS,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAJb;AAKE,QAAA,UAAU,EAAE,KAAKC,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CALd;AAME,QAAA,WAAW,EAAE,KAAKE,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CANf;AAOE,QAAA,cAAc,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD;;;;EAnCqCtB,KAAK,CAACC,S;;SAAzBY,U;AAsCrB,IAAMR,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTrB,IAAAA,eAAe,EAAE,MAHR;AAITsB,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BxB,EAAAA,IAAI,EAAE;AACJwB,IAAAA,cAAc,EAAE,QADZ;AAEJD,IAAAA,UAAU,EAAE,QAFR;AAGJE,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,OAAO,EAAE,EAJL;AAKJC,IAAAA,KAAK,EAAE,GALH;AAMJC,IAAAA,MAAM,EAAE;AANJ,GARyB;AAgB/B1B,EAAAA,QAAQ,EAAE;AACRuB,IAAAA,QAAQ,EAAG;AADH,GAhBqB;AAmB/BpB,EAAAA,eAAe,EAAE;AACfoB,IAAAA,QAAQ,EAAE,EADK;AAEfF,IAAAA,UAAU,EAAE,QAFG;AAGfM,IAAAA,SAAS,EAAE;AAHI;AAnBc,CAAlB,CAAf","sourcesContent":["// SwipeCards.js\n\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Alert } from \"react-native\";\n\nimport SwipeCards from \"react-native-swipe-cards\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View\n        style={[styles.card, { backgroundColor: this.props.backgroundColor }]}\n      >\n        <Text style={styles.cardText}>{this.props.text}</Text>\n      </View>\n    );\n  }\n}\n\nclass NoMoreCards extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <View>\n        <Text style={styles.noMoreCardsText}>\n          Great! You have finished all the FlashCards\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst cards = [\n\n  { text: \"The cell in a living organism is the basic structural unit.\", backgroundColor: \"cyan\"},\n  { text: \"Organs are made up of tissues which are in turn made up of cells\", backgroundColor: \"cyan\"},\n  { text: \"Organs perform different functions such as digestion, assimilation and absorption.\", backgroundColor: \"cyan\"},\n  { text: \"Cell Membrane, Cytoplasm and Nucleus are key components of the Cell\", backgroundColor: \"cyan\"},\n  { text: \"Nucleus are generally spherical and located in the centre of the cell\", backgroundColor: \"cyan\"},\n  { text: \"Nucleus is the Control Centre of the activities in the cell and contains chromosomes\", backgroundColor: \"cyan\"},\n  { text: \"Chromosome carry genes and help in inheritance\", backgroundColor: \"cyan\"},\n  { text: \"Cytoplasm and Nucleus make up the entire content of a cell called protoplasm\", backgroundColor: \"cyan\"},\n];\n\n\nexport default class FlashCards extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: cards,\n      score: 0,\n    };\n  }\n\n  handleYup(card) {\n    this.setState({ score: this.state.score + 1 });\n    console.log(`Yup for ${card.text}`);\n  }\n  handleNope(card) {\n    this.setState({ score: this.state.score - 1 });\n    console.log(`Nope for ${card.text}`);\n  }\n  handleMaybe(card) {\n    console.log(`Maybe for ${card.text}`);\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <SwipeCards\n          cards={this.state.cards}\n          renderCard={(cardData) => <Card {...cardData} />}\n          renderNoMoreCards={() => <NoMoreCards />}\n          handleYup={this.handleYup.bind(this)}\n          handleNope={this.handleNope.bind(this)}\n          handleMaybe={this.handleMaybe.bind(this)}\n          hasMaybeAction\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 30,\n    padding: 30,\n    width: 300,\n    height: 500,\n  },\n  cardText: {\n    fontSize : 30,\n  },\n  noMoreCardsText: {\n    fontSize: 22,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}