{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/drive1/MicrosoftEngage/assist-learning/assist/NucleusSummary.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyledText from 'react-native-styled-text';\n\nvar NucleusSummary = function (_React$Component) {\n  _inherits(NucleusSummary, _React$Component);\n\n  var _super = _createSuper(NucleusSummary);\n\n  function NucleusSummary() {\n    var _this;\n\n    _classCallCheck(this, NucleusSummary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.buttonClickedHandler = function () {\n      _this.props.navigation.navigate(\"TopicGraph2\");\n    };\n\n    return _this;\n  }\n\n  _createClass(NucleusSummary, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.screen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, \"Nucleus\"), React.createElement(StyledText, {\n        style: styles.baseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, \"Generally <b>spherical</b> and located in the <b>centre of the cell</b>.\"), React.createElement(StyledText, {\n        style: styles.baseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, \"A porous <b>Nuclear Membrane</b> separates nucleus from <u>cytoplasm</u>.\"), React.createElement(StyledText, {\n        style: styles.baseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, \"<b>Nucleus</b> contains  thread-like  structures  called <b>chromosomes</b>.\"), React.createElement(StyledText, {\n        style: styles.baseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, \"<b>Chromosomes</b> carry genes and help in <b>inheritance (transfer of characters from the parents to the offspring)</b>.\"), React.createElement(StyledText, {\n        style: styles.baseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, \"It is <b>control centre</b> of the activities of the cell.\"), React.createElement(StyledText, {\n        style: styles.minorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, \"The entire content of a living cell is known as protoplasm composed of <b>cytoplasm and nucleus</b>\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.buttonClickedHandler();\n        },\n        style: styles.roundButton2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Done\")));\n    }\n  }]);\n\n  return NucleusSummary;\n}(React.Component);\n\nexport { NucleusSummary as default };\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 100,\n    paddingHorizontal: 15\n  },\n  titleText: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  baseText: {\n    fontSize: 20,\n    margin: 10\n  },\n  minorText: {\n    fontSize: 17,\n    margin: 10\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 80,\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc'\n  }\n});","map":{"version":3,"sources":["/drive1/MicrosoftEngage/assist-learning/assist/NucleusSummary.js"],"names":["React","StyledText","NucleusSummary","buttonClickedHandler","props","navigation","navigate","styles","screen","titleText","baseText","minorText","roundButton2","Component","StyleSheet","create","flex","alignItems","marginTop","paddingHorizontal","fontSize","fontWeight","margin","width","height","justifyContent","padding","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\nimport StyledText from 'react-native-styled-text';\n\nexport default class NucleusSummary extends React.Component {\n\n  buttonClickedHandler = () => {\n    this.props.navigation.navigate(\"TopicGraph2\");\n  };\n\n  render() {\n    return (\n    <View style={styles.screen}>\n      <Text style={styles.titleText}>\n          Nucleus\n      </Text>\n      <StyledText style={styles.baseText}>\n        {\"Generally <b>spherical</b> and located in the <b>centre of the cell</b>.\"}\n      </StyledText>\n      <StyledText style={styles.baseText}>\n        {\"A porous <b>Nuclear Membrane</b> separates nucleus from <u>cytoplasm</u>.\"}\n      </StyledText>\n      <StyledText style={styles.baseText}>\n        {\"<b>Nucleus</b> contains  thread-like  structures  called <b>chromosomes</b>.\"}\n      </StyledText>\n      <StyledText style={styles.baseText}>\n        {\"<b>Chromosomes</b> carry genes and help in <b>inheritance (transfer of characters from the parents to the offspring)</b>.\"}\n      </StyledText>\n      <StyledText style={styles.baseText}>\n        {\"It is <b>control centre</b> of the activities of the cell.\"}\n      </StyledText>\n\n      <StyledText style={styles.minorText}>\n        {\"The entire content of a living cell is known as protoplasm composed of <b>cytoplasm and nucleus</b>\"}\n      </StyledText>\n\n      <TouchableOpacity\n          onPress={()=>{this.buttonClickedHandler()}}\n          style={styles.roundButton2}>\n          <Text>Done</Text>\n        </TouchableOpacity>\n\n    </View>\n  );\n  }\n}\n\n/// Just some styles\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    // justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 100,\n    paddingHorizontal: 15,\n  },\n  titleText: {\n      fontSize: 30,\n      fontWeight: \"bold\"\n  },\n  baseText: {\n    fontSize: 20,\n    margin: 10,\n  },\n  minorText: {\n    fontSize: 17,\n    margin: 10,\n  },\n  roundButton2: {\n    marginTop: 20,\n    width: 80,\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    margin: 10,\n    borderRadius: 100,\n    backgroundColor: '#ccc',\n  },\n});"]},"metadata":{},"sourceType":"module"}